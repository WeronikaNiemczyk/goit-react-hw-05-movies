{"version":3,"file":"static/js/182.3bceb78e.chunk.js","mappings":"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","sources":["components/Api.jsx","components/MovieList.jsx","components/Movies.styled.js","components/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a7e1e3e4724f3c237a7f9851c1e9cd77';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  // console.log('response:', response);\n  // console.log('response data:', response.data);\n  // console.log('response data results:', response.data.results);\n  return response.data.results;\n};\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  const responseArray = [response.data];\n  // console.log('response:', responseArray);\n  // console.log('response data:', response.data);\n  // console.log('response data results:', response.data.results);\n  return responseArray;\n};\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`, params);\n  const responseArray = [response.data];\n  // console.log('response:', response);\n  // console.log('response data:', response.data);\n  // console.log('response data results:', response.data.results);\n  return responseArray;\n};\nexport const fetchReview = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`, params);\n  // console.log('response:', response);\n  // console.log('response data:', response.data);\n  // console.log('response data results:', response.data.results);\n  return response.data.results;\n};\n\nexport const fetchKeyWords = async query => {\n  const response = await axios.get(`search/movie?query=${query}`, params);\n  console.log('response:', response);\n  console.log('response data:', response.data);\n  console.log('response data results:', response.data.results);\n  return response.data.results;\n};\n","import { Link } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  //   console.log('moovieslist', movies);\n  return (\n    <>\n      <div>\n        <ul>\n          {movies?.map(({ id, title }) => (\n            <div key={id}>\n              <Link to={`/movies/${id}`}>{title}</Link>\n            </div>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n  color: #bf4f74;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid #bf4f74;\n  border-radius: 3px;\n`;","import { useState } from 'react';\nimport { Button } from './Layout.styled';\nimport { Input } from './Movies.styled';\nimport { fetchKeyWords } from './Api';\nimport { MovieList } from './MovieList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  // console.log('id', searchParams);\n\n  // console.log('query', query);\n  const onChange = event => {\n    setQuery(event.target.value);\n    setSearchParams({ query: event.target.value });\n  };\n\n  const searchMovies = async () => {\n    if (!query) return;\n    try {\n      const results = await fetchKeyWords(movieName);\n      setMovies(results);\n    } catch (error) {\n      console.error('Error searching for movies:', error);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <Input\n          value={movieName}\n          type=\"text\"\n          placeholder=\"Type...\"\n          onChange={onChange}\n        />\n        <Button onClick={searchMovies}>Search</Button>\n      </div>\n      <MovieList movies={movies} />\n    </>\n  );\n};\nexport default Movies;\n"],"names":["axios","params","api_key","language","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchDetails","_ref2","_callee2","movieId","responseArray","_context2","concat","_x","fetchCast","_ref3","_callee3","_context3","_x2","fetchReview","_ref4","_callee4","_context4","_x3","fetchKeyWords","_ref5","_callee5","query","_context5","console","log","_x4","MovieList","movies","_jsx","_Fragment","children","map","id","title","Link","to","Input","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","searchMovies","t0","error","_jsxs","value","type","placeholder","onChange","event","target","Button","onClick"],"sourceRoot":""}